# Brokerage Platform Load Balancer Configuration

upstream api_gateway {
    least_conn;
    server api-gateway-1:3010 max_fails=3 fail_timeout=30s;
    server api-gateway-2:3010 max_fails=3 fail_timeout=30s;
    server api-gateway-3:3010 max_fails=3 fail_timeout=30s;
}

upstream algorithmic_trading {
    least_conn;
    server algorithmic-trading-1:3001 max_fails=3 fail_timeout=30s;
    server algorithmic-trading-2:3001 max_fails=3 fail_timeout=30s;
    server algorithmic-trading-3:3001 max_fails=3 fail_timeout=30s;
}

upstream risk_monitoring {
    least_conn;
    server risk-monitoring-1:3002 max_fails=3 fail_timeout=30s;
    server risk-monitoring-2:3002 max_fails=3 fail_timeout=30s;
    server risk-monitoring-3:3002 max_fails=3 fail_timeout=30s;
}

upstream compliance_engine {
    least_conn;
    server compliance-engine-1:3003 max_fails=3 fail_timeout=30s;
    server compliance-engine-2:3003 max_fails=3 fail_timeout=30s;
    server compliance-engine-3:3003 max_fails=3 fail_timeout=30s;
}

upstream fraud_detection {
    least_conn;
    server fraud-detection-1:3004 max_fails=3 fail_timeout=30s;
    server fraud-detection-2:3004 max_fails=3 fail_timeout=30s;
    server fraud-detection-3:3004 max_fails=3 fail_timeout=30s;
}

upstream tax_optimization {
    least_conn;
    server tax-optimization-1:3005 max_fails=3 fail_timeout=30s;
    server tax-optimization-2:3005 max_fails=3 fail_timeout=30s;
    server tax-optimization-3:3005 max_fails=3 fail_timeout=30s;
}

upstream performance_analytics {
    least_conn;
    server performance-analytics-1:3006 max_fails=3 fail_timeout=30s;
    server performance-analytics-2:3006 max_fails=3 fail_timeout=30s;
    server performance-analytics-3:3006 max_fails=3 fail_timeout=30s;
}

upstream market_data_processing {
    least_conn;
    server market-data-1:3007 max_fails=3 fail_timeout=30s;
    server market-data-2:3007 max_fails=3 fail_timeout=30s;
    server market-data-3:3007 max_fails=3 fail_timeout=30s;
}

upstream custom_reporting {
    least_conn;
    server custom-reporting-1:3008 max_fails=3 fail_timeout=30s;
    server custom-reporting-2:3008 max_fails=3 fail_timeout=30s;
    server custom-reporting-3:3008 max_fails=3 fail_timeout=30s;
}

upstream zero_trust_security {
    least_conn;
    server zero-trust-1:3009 max_fails=3 fail_timeout=30s;
    server zero-trust-2:3009 max_fails=3 fail_timeout=30s;
    server zero-trust-3:3009 max_fails=3 fail_timeout=30s;
}

upstream notification_system {
    least_conn;
    server notification-1:3011 max_fails=3 fail_timeout=30s;
    server notification-2:3011 max_fails=3 fail_timeout=30s;
    server notification-3:3011 max_fails=3 fail_timeout=30s;
}

upstream intelligent_kyc {
    least_conn;
    server intelligent-kyc-1:3012 max_fails=3 fail_timeout=30s;
    server intelligent-kyc-2:3012 max_fails=3 fail_timeout=30s;
    server intelligent-kyc-3:3012 max_fails=3 fail_timeout=30s;
}

upstream identity_verification {
    least_conn;
    server identity-verification-1:3013 max_fails=3 fail_timeout=30s;
    server identity-verification-2:3013 max_fails=3 fail_timeout=30s;
    server identity-verification-3:3013 max_fails=3 fail_timeout=30s;
}

upstream onboarding_orchestrator {
    least_conn;
    server onboarding-orchestrator-1:3014 max_fails=3 fail_timeout=30s;
    server onboarding-orchestrator-2:3014 max_fails=3 fail_timeout=30s;
    server onboarding-orchestrator-3:3014 max_fails=3 fail_timeout=30s;
}

upstream event_bus {
    least_conn;
    server event-bus-1:3020 max_fails=3 fail_timeout=30s;
    server event-bus-2:3020 max_fails=3 fail_timeout=30s;
    server event-bus-3:3020 max_fails=3 fail_timeout=30s;
}

upstream monitoring_system {
    least_conn;
    server monitoring-1:3021 max_fails=3 fail_timeout=30s;
    server monitoring-2:3021 max_fails=3 fail_timeout=30s;
    server monitoring-3:3021 max_fails=3 fail_timeout=30s;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
limit_req_zone $binary_remote_addr zone=websocket:10m rate=50r/s;

# Main server block
server {
    listen 80;
    server_name brokerage-platform.com;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Rate limiting
    limit_req zone=api burst=20 nodelay;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # API Gateway routes
    location /api/ {
        proxy_pass http://api_gateway;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # WebSocket connections
    location /ws/ {
        limit_req zone=websocket burst=10 nodelay;
        proxy_pass http://api_gateway;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
    }
    
    # Service-specific routes
    location /api/algorithmic-trading/ {
        proxy_pass http://algorithmic_trading;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/risk-monitoring/ {
        proxy_pass http://risk_monitoring;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/compliance/ {
        proxy_pass http://compliance_engine;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/fraud-detection/ {
        proxy_pass http://fraud_detection;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/tax-optimization/ {
        proxy_pass http://tax_optimization;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/performance-analytics/ {
        proxy_pass http://performance_analytics;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/market-data/ {
        proxy_pass http://market_data_processing;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/reporting/ {
        proxy_pass http://custom_reporting;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/security/ {
        proxy_pass http://zero_trust_security;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/notifications/ {
        proxy_pass http://notification_system;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/kyc/ {
        proxy_pass http://intelligent_kyc;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/identity/ {
        proxy_pass http://identity_verification;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/onboarding/ {
        proxy_pass http://onboarding_orchestrator;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/events/ {
        proxy_pass http://event_bus;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /api/monitoring/ {
        proxy_pass http://monitoring_system;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Static files
    location /static/ {
        alias /var/www/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /var/www/error;
    }
}

# HTTPS server block
server {
    listen 443 ssl http2;
    server_name brokerage-platform.com;
    
    # SSL configuration
    ssl_certificate /etc/ssl/certs/brokerage-platform.crt;
    ssl_certificate_key /etc/ssl/private/brokerage-platform.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Rate limiting
    limit_req zone=api burst=20 nodelay;
    
    # Same location blocks as HTTP server
    include /etc/nginx/conf.d/brokerage-locations.conf;
}